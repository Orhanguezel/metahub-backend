{
  "meta.profile.missing": "APP_ENV or ACTIVE_META_PROFILE is not defined.",
  "meta.profile.using": "üõ† Using meta profile: {profile}",
  "meta.module.ignore": "üö´ Skipped (ignored module): {mod}",
  "meta.module.noRoutes": "‚ö†Ô∏è Skipped (no route file found): {mod}",
  "meta.meta.orphan": "üóëÔ∏è Orphan meta found: {modName}",
  "meta.meta.deleted": "üßπ Meta file deleted: {file}",
  "meta.meta.deleteFail": "‚ùå Failed to delete meta file: {modName}",
  "meta.db.deleteFail": "‚ùå Failed to delete DB records: {modName}",
  "meta.db.deleteSuccess": "üßπ DB records deleted: {modName}",
  "meta.module.generated": "‚úÖ {mod} ({count} route) generated",
  "meta.schema.attachFail": "‚ö†Ô∏è Failed to attach validation schema: {route}",
  "meta.meta.writeFail": "‚ùå Failed to write meta file: {mod}",
  "meta.db.updateFail": "‚ùå DB update failed: {mod}",
  "meta.db.settingFail": "‚ùå DB setting update failed: {mod} ({profile})",
  "meta.finished": "All meta operations completed.",
  "meta.dir.created": "Directory created: {dir}",
  "meta.orphan.found": "Orphan meta found: {mod}",
  "meta.orphan.deleted": "{file} deleted.",
  "meta.orphan.deleteFail": "Failed to delete meta file: {mod}",
  "meta.db.deleted": "DB records deleted: {mod}",
  "meta.ignoreModule": "Skipped module: {mod}",
  "meta.noRoutes": "Module skipped: {mod} (no route files)",
  "meta.file.empty": "Meta file is empty: {metaPath}",
  "meta.file.parseFail": "Failed to parse meta file: {metaPath}",
  "meta.readFail": "Failed to read meta file: {mod}",
  "meta.attachValidationFail": "Failed to attach validation: {summary}",
  "meta.db.settingUpdateFail": "DB setting update error: {mod} ({profile})",
  "meta.success": "{mod} ({count} route) processed successfully.",
  "meta.cleanup.deleting": "Deleting disabled module \"{mod}\" for profile \"{profile}\"",
  "meta.cleanup.deletedFile": "Meta file deleted: {metaPath}",
  "meta.cleanup.deletedDb": "Database records deleted: {mod} (profile: {profile})",
  "meta.enforce.updated": "üîÅ Updated \"{module}\" in profile \"{profile}\" ‚Üí enabled: {enabled}",
  "meta.env.readFail": "‚ùå Failed to read .env.{profile}:",
  "meta.route.fileNotFound": "Route file not found: {filePath}",
  "meta.route.readError": "Error reading route file: {filePath}",
  "meta.route.dirReadError": "Error reading route directory: {modPath}",
  "meta.fs.dirCreated": "Directory created: {dirPath}",
  "meta.fs.dirCreateError": "Error creating directory: {dirPath}",
  "meta.fs.fileNotFound": "File not found: {filePath}",
  "meta.fs.fileReadError": "Error reading file: {filePath}",
  "meta.fs.fileWritten": "File written: {filePath}",
  "meta.fs.fileWriteError": "Error writing file: {filePath}",
  "meta.fs.fileDeleted": "File deleted: {filePath}",
  "meta.fs.fileDeleteError": "Error deleting file: {filePath}",
  "meta.fs.dirReadError": "Error reading directory: {basePath}",
  "meta.git.userNotFound": "Git user.name not found.",
  "meta.git.commitNotFound": "Git commit hash not found.",
  "meta.version.bumped": "Meta version bumped to {version} by {by}.",
  "meta.validation.notFound": "No validation found for {mod} {route}",
  "meta.validation.importFail": "Validation import failed for {mod}: {error}",
  "meta.version.invalidFormat": "‚ö†Ô∏è Invalid version format: {version}, defaulting to 1.0.0",
  "meta.fix.setting.created": "Missing setting created: {{module}} ({{project}})",
  "meta.fix.setting.completed": "{{count}} missing settings were automatically added.",
  "meta.fix.setting.noMissing": "No missing settings found.",
  "meta.fix.setting.invalid": "Invalid setting detected: {{param}}",
  "meta": {
    "validation": {
      "notFound": "No validation found for module {mod} and route {route} in tenant {tenant}.",
      "empty": "Validation module is empty for module {mod} in tenant {tenant}.",
      "importFail": "Error loading validation for module {mod} in tenant {tenant}: {error}"
    }
  }
}
