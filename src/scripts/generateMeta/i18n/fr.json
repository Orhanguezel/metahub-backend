{
  "meta.profile.missing": "APP_ENV ou ACTIVE_META_PROFILE n'est pas d√©fini.",
  "meta.profile.using": "üõ† Profil meta utilis√© : {profile}",
  "meta.module.ignore": "üö´ Ignor√© (module ignor√©) : {mod}",
  "meta.module.noRoutes": "‚ö†Ô∏è Ignor√© (aucun fichier de route trouv√©) : {mod}",
  "meta.meta.orphan": "üóëÔ∏è Meta orphelin trouv√© : {modName}",
  "meta.meta.deleted": "üßπ Fichier meta supprim√© : {file}",
  "meta.meta.deleteFail": "‚ùå √âchec de la suppression du fichier meta : {modName}",
  "meta.db.deleteFail": "‚ùå √âchec de la suppression des enregistrements BD : {modName}",
  "meta.db.deleteSuccess": "üßπ Enregistrements BD supprim√©s : {modName}",
  "meta.module.generated": "‚úÖ {mod} ({count} route) g√©n√©r√©",
  "meta.schema.attachFail": "‚ö†Ô∏è √âchec de l'attachement du sch√©ma de validation : {route}",
  "meta.meta.writeFail": "‚ùå √âchec de l'√©criture du fichier meta : {mod}",
  "meta.db.updateFail": "‚ùå √âchec de la mise √† jour de la BD : {mod}",
  "meta.db.settingFail": "‚ùå √âchec de la mise √† jour des param√®tres BD : {mod} ({profile})",
  "meta.finished": "Toutes les op√©rations meta sont termin√©es.",
  "meta.dir.created": "R√©pertoire cr√©√© : {dir}",
  "meta.orphan.found": "Meta orphelin trouv√© : {mod}",
  "meta.orphan.deleted": "{file} supprim√©.",
  "meta.orphan.deleteFail": "√âchec de la suppression du fichier meta : {mod}",
  "meta.db.deleted": "Enregistrements BD supprim√©s : {mod}",
  "meta.ignoreModule": "Module ignor√© : {mod}",
  "meta.noRoutes": "Module ignor√© : {mod} (aucun fichier de route)",
  "meta.file.empty": "Fichier meta vide : {metaPath}",
  "meta.file.parseFail": "√âchec de l'analyse du fichier meta : {metaPath}",
  "meta.readFail": "√âchec de la lecture du fichier meta : {mod}",
  "meta.attachValidationFail": "√âchec de l'attachement de la validation : {summary}",
  "meta.db.settingUpdateFail": "Erreur de mise √† jour des param√®tres BD : {mod} ({profile})",
  "meta.success": "{mod} ({count} route) trait√© avec succ√®s.",
  "meta.cleanup.deleting": "Suppression du module d√©sactiv√© \"{mod}\" pour le profil \"{profile}\"",
  "meta.cleanup.deletedFile": "Fichier meta supprim√© : {metaPath}",
  "meta.cleanup.deletedDb": "Enregistrements base de donn√©es supprim√©s : {mod} (profil : {profile})",
  "meta.enforce.updated": "üîÅ \"{module}\" mis √† jour dans le profil \"{profile}\" ‚Üí activ√© : {enabled}",
  "meta.env.readFail": "‚ùå Impossible de lire .env.{profile} :",
  "meta.route.fileNotFound": "Fichier de route non trouv√© : {filePath}",
  "meta.route.readError": "Erreur de lecture du fichier de route : {filePath}",
  "meta.route.dirReadError": "Erreur de lecture du r√©pertoire des routes : {modPath}",
  "meta.fs.dirCreated": "R√©pertoire cr√©√© : {dirPath}",
  "meta.fs.dirCreateError": "Erreur lors de la cr√©ation du r√©pertoire : {dirPath}",
  "meta.fs.fileNotFound": "Fichier non trouv√© : {filePath}",
  "meta.fs.fileReadError": "Erreur lors de la lecture du fichier : {filePath}",
  "meta.fs.fileWritten": "Fichier √©crit : {filePath}",
  "meta.fs.fileWriteError": "Erreur lors de l'√©criture du fichier : {filePath}",
  "meta.fs.fileDeleted": "Fichier supprim√© : {filePath}",
  "meta.fs.fileDeleteError": "Erreur lors de la suppression du fichier : {filePath}",
  "meta.fs.dirReadError": "Erreur lors de la lecture du r√©pertoire : {basePath}",
  "meta.git.userNotFound": "Git user.name non trouv√©.",
  "meta.git.commitNotFound": "Git commit hash non trouv√©.",
  "meta.version.bumped": "Version meta pass√©e √† {version} par {by}.",
  "meta.validation.notFound": "Aucune validation trouv√©e pour {mod} {route}",
  "meta.validation.importFail": "√âchec de l'importation de la validation pour {mod} : {error}",
  "meta.version.invalidFormat": "‚ö†Ô∏è Format de version invalide : {version}, par d√©faut 1.0.0",
  "meta.fix.setting.created": "Param√®tre manquant cr√©√© : {{module}} ({{project}})",
  "meta.fix.setting.completed": "{{count}} param√®tres manquants ont √©t√© ajout√©s automatiquement.",
  "meta.fix.setting.noMissing": "Aucun param√®tre manquant trouv√©.",
  "meta.fix.setting.invalid": "Param√®tre invalide d√©tect√© : {{param}}",
  "meta": {
    "validation": {
      "notFound": "Aucune validation trouv√©e pour le module {mod} et la route {route} dans le locataire {tenant}.",
      "empty": "Le module de validation est vide pour le module {mod} dans le locataire {tenant}.",
      "importFail": "Erreur lors du chargement de la validation pour le module {mod} dans le locataire {tenant} : {error}"
    }
  }
}
