import { Request, Response } from "express";
import asyncHandler from "express-async-handler";
import Company from "./company.models";
import { isValidObjectId } from "../../core/utils/validation";

// üìÑ T√ºm ≈üirket bilgisi (tek kayƒ±t)
export const getCompanyInfo = asyncHandler(async (req: Request, res: Response) => {
  const company = await Company.findOne();
  if (!company) {
    res.status(404).json({
      message:
        req.locale === "de"
          ? "Firmeninformation nicht gefunden."
          : req.locale === "tr"
          ? "≈ûirket bilgisi bulunamadƒ±."
          : "Company information not found.",
    });
    return;
  }

  res.status(200).json(company);
});

// ‚ûï Yeni ≈üirket olu≈ütur (sadece 1 kayƒ±t izinli)
export const createCompany = asyncHandler(async (req: Request, res: Response) => {
  const exists = await Company.findOne();
  if (exists) {
    res.status(400).json({
      message:
        req.locale === "de"
          ? "Ein Unternehmen ist bereits registriert."
          : req.locale === "tr"
          ? "Zaten bir ≈üirket kaydƒ± mevcut."
          : "A company is already registered.",
    });
    return;
  }

  const newCompany = await Company.create(req.body);

  res.status(201).json({
    success: true,
    message:
      req.locale === "de"
        ? "Unternehmen erfolgreich erstellt."
        : req.locale === "tr"
        ? "≈ûirket ba≈üarƒ±yla olu≈üturuldu."
        : "Company created successfully.",
    company: newCompany,
  });
});

// ‚úèÔ∏è ≈ûirket bilgilerini g√ºncelle
export const updateCompanyInfo = asyncHandler(async (req: Request, res: Response) => {
  const { id } = req.params;

  if (!isValidObjectId(id)) {
    res.status(400).json({
      message:
        req.locale === "de"
          ? "Ung√ºltige Firmen-ID."
          : req.locale === "tr"
          ? "Ge√ßersiz ≈üirket ID."
          : "Invalid company ID.",
    });
    return;
  }

  const updated = await Company.findByIdAndUpdate(id, req.body, { new: true });

  if (!updated) {
    res.status(404).json({
      message:
        req.locale === "de"
          ? "Firma nicht gefunden."
          : req.locale === "tr"
          ? "≈ûirket bulunamadƒ±."
          : "Company not found.",
    });
    return;
  }

  res.status(200).json({
    success: true,
    message:
      req.locale === "de"
        ? "Firmendaten aktualisiert."
        : req.locale === "tr"
        ? "≈ûirket bilgileri g√ºncellendi."
        : "Company info updated.",
    company: updated,
  });
});
