{
  "page": {
    "title": "Plans de planification",
    "subtitle": "Plans récurrents par contexte appartement/service/modèle"
  },
  "list": {
    "title": "Liste des plans",
    "search": "Rechercher...",
    "filters": {
      "status": "Statut",
      "apartment": "Appartement",
      "service": "Service",
      "template": "Modèle",
      "contract": "Contrat",
      "tag": "Étiquette",
      "from": "Début (>=)",
      "to": "Début (<=)"
    },
    "table": {
      "code": "Code",
      "apartment": "Appartement",
      "service": "Service",
      "pattern": "Récurrence",
      "nextRunAt": "Prochaine exécution",
      "status": "Statut",
      "updatedAt": "Mis à jour"
    }
  },
  "form": {
    "titleCreate": "Créer un plan",
    "titleUpdate": "Modifier le plan",
    "sections": {
      "anchor": "Contexte (Anchor)",
      "pattern": "Règle de récurrence",
      "window": "Plage horaire",
      "policy": "Politique de génération",
      "exceptions": "Exceptions (Skip/Blackout)"
    },
    "fields": {
      "apartmentRef": "Appartement",
      "categoryRef": "Catégorie/Quartier",
      "serviceRef": "Service",
      "templateRef": "Modèle d’opération",
      "contractRef": "Contrat",
      "timezone": "Fuseau horaire",
      "patternType": "Type de motif",
      "every": "Tous les (N)",
      "daysOfWeek": "Jours de la semaine",
      "dayOfMonth": "Jour du mois",
      "nth": "Nième",
      "weekday": "Jour de semaine",
      "month": "Mois",
      "startDate": "Date de début",
      "endDate": "Date de fin",
      "startTime": "Heure de début",
      "endTime": "Heure de fin",
      "durationMinutes": "Durée (min)",
      "leadTimeDays": "Délai (jours)",
      "lockAheadPeriods": "Périodes verrouillées à l’avance",
      "autoAssign": "Affectation automatique",
      "preferredEmployees": "Employés préférés",
      "minCrewSize": "Équipe min.",
      "maxCrewSize": "Équipe max.",
      "skipDates": "Jours ignorés",
      "blackouts": "Plages d’indisponibilité"
    },
    "actions": {
      "previewDates": "Aperçu des dates candidates",
      "save": "Enregistrer",
      "update": "Mettre à jour",
      "delete": "Supprimer",
      "cancel": "Annuler"
    }
  },
  "status": {
    "active": "Actif",
    "paused": "En pause",
    "archived": "Archivé"
  },
  "pattern": {
    "weekly": "Hebdomadaire",
    "dayOfMonth": "Jour du mois",
    "nthWeekday": "Nième jour de semaine du mois",
    "yearly": "Annuel"
  },
  "weekday": {
    "0": "Dimanche",
    "1": "Lundi",
    "2": "Mardi",
    "3": "Mercredi",
    "4": "Jeudi",
    "5": "Vendredi",
    "6": "Samedi"
  },
  "messages": {
    "created": "Plan créé.",
    "updated": "Plan mis à jour.",
    "deleted": "Plan supprimé.",
    "fetched": "Plan récupéré.",
    "listFetched": "Liste des plans récupérée.",
    "error.create_fail": "Erreur lors de la création du plan.",
    "invalidId": "Identifiant invalide.",
    "notFound": "Enregistrement introuvable."
  },
  "validation": {
    "invalidObjectId": "ObjectId invalide.",
    "anchorRequired": "Le contexte (anchor) est requis.",
    "anchorInvalid": "Le contexte (anchor) est invalide.",
    "apartmentRef": "apartmentRef doit être une ObjectId valide.",
    "categoryRef": "categoryRef doit être une ObjectId valide.",
    "serviceRef": "serviceRef doit être une ObjectId valide.",
    "templateRef": "templateRef doit être une ObjectId valide.",
    "contractRef": "contractRef doit être une ObjectId valide.",
    "patternRequired": "La règle de récurrence est requise.",
    "patternInvalid": "La règle de récurrence est invalide.",
    "patternType": "Type de motif invalide.",
    "patternEvery": "« Tous les (N) » doit être ≥ 1.",
    "daysOfWeek": "Les jours doivent être compris entre 0 et 6.",
    "dayOfMonth": "Le jour du mois doit être compris entre 1 et 31.",
    "nth": "Le Nième doit être compris entre 1 et 5.",
    "weekday": "Le jour de semaine doit être compris entre 0 et 6.",
    "month": "Le mois doit être compris entre 1 et 12.",
    "windowInvalid": "La plage horaire est invalide.",
    "duration": "La durée doit être ≥ 0.",
    "policyInvalid": "La politique de génération est invalide.",
    "leadTimeDays": "Le délai doit être ≥ 0.",
    "lockAhead": "Les périodes verrouillées doivent être ≥ 0.",
    "startDate": "Une date de début valide est requise.",
    "endDate": "La date de fin doit être valide.",
    "skipDates": "skipDates doit être un tableau.",
    "blackouts": "blackouts doit être un tableau.",
    "tags": "tags doit être un tableau."
  }
}
